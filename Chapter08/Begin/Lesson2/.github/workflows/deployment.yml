name: Deployment

on:
  push:
    tags:
      - '*'

jobs:
  upload-client:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: |
        dotnet tool restore
        dotnet restore src

    - name: Export Operations
      run: dotnet build src/eShop.Catalog.UI --no-restore -c Release

    - name: Upload Operations
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        echo $TAG_NAME
        dotnet barista client upload --operations-file PersistedQueries/queries.json --client-id ${{ secrets.CLIENT_ID }} --tag catalog-$TAG_NAME --api-key ${{ secrets.API_KEY }}

  upload-schema:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: |
        dotnet tool restore
        dotnet restore src

    - name: Export Schema
      run: dotnet run --project src/Catalog.API -- schema export --output ../../schema.graphql

    - name: Upload Schema
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        echo $TAG_NAME
        dotnet barista schema upload --schema-file ./schema.graphql --tag catalog-$TAG_NAME --api-id ${{ secrets.API_ID }} --api-key ${{ secrets.API_KEY }}

  build:
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to registry
      uses: docker/login-action@v3
      with:
        registry: https://cccworkshopeucr.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_ca78734b721b4828867a7ff2a11ed6fd }}
        password: ${{ secrets.AzureAppService_ContainerPassword_228ff18bbd534f269b0870cf6db09f92 }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: cccworkshopeucr.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_ca78734b721b4828867a7ff2a11ed6fd }}/ccc-conf-us1-wa1-catalog-api:${{ github.sha }}
        file: ./dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: [build, upload-schema, upload-client]
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet tool restore

    - name: Publish Schema
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        echo $TAG_NAME
        dotnet barista schema publish --tag catalog-$TAG_NAME --stage dev --api-id ${{ secrets.API_ID }} --api-key ${{ secrets.API_KEY }} --wait-for-approval

    - name: Publish Operations
      run: |
        TAG_NAME=${GITHUB_REF##*/}
        echo $TAG_NAME
        dotnet barista client publish --tag catalog-$TAG_NAME --stage dev --client-id ${{ secrets.CLIENT_ID }} --api-key ${{ secrets.API_KEY }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ccc-conf-us1-wa1-catalog-api'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_48363a11c2a74ad89a9f2fe133143d6a }}
        images: 'cccworkshopeucr.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_ca78734b721b4828867a7ff2a11ed6fd }}/ccc-conf-us1-wa1-catalog-api:${{ github.sha }}'
 